spring.h2.console.enabled=true
#debug = true

server.port=8085
# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
spring.datasource.url=jdbc:postgresql://db:5432/springbootdb
spring.datasource.username=user_dev
spring.datasource.password=1234
spring.datasource.driver-class-name=org.postgresql.Driver

#spring.r2dbc.url=r2dbc:postgresql://localhost:5432/springbootdb
#spring.r2dbc.username=dev_user
#spring.r2dbc.password=1234

# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
#spring.jpa.show-sql=true
# spring.jpa.properties.hibernate.format_sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
#spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.hibernate.ddl-auto=update
#create-drop
spring.datasource.hikari.auto-commit=false

# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

app.firebase-configuration-file=firebaseconfig/firebase-service-account.json

spring.batch.initialize-schema: always
spring.batch.job.enabled=false